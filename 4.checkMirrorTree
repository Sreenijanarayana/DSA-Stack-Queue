class Solution {
    static int checkMirrorTree(int n, int e, int[] A, int[] B) {
        HashMap<Integer,Stack<Integer>> hm = new HashMap<>();
        for(int i=0;i<A.length;i+=2){
           hm.putIfAbsent(A[i],new Stack<Integer>());
           hm.get(A[i]).push(A[i+1]);
        }
        for(int i=0;i<B.length;i+=2){
            if(hm.containsKey(B[i]) &&  hm.get(B[i]).peek()==B[i+1])
            {
                hm.get(B[i]).pop();
                  
               }
               
             else
               return 0;
                
        }
        return 1;
        
    }
};
